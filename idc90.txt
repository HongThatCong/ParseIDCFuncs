// IDA v9.0.240925 ida.dll
// Created by HTC
//
.data:0000000100451238: ExtIDCFuncTable
.text:00000001000185D0: ____(VT_VOID)
.text:0000000100014D30: selector_by_name(VT_STR2)
.text:0000000100014D80: to_ea(VT_LONG, VT_LONG)
.text:0000000100014DA0: create_insn(VT_LONG)
.text:0000000100014DD0: set_name(VT_LONG, VT_STR2, VT_LONG), ndefvals = 1, defvals: VT_LONG
.text:0000000100014E10: set_cmt(VT_LONG, VT_STR2, VT_LONG)
.text:0000000100014E50: make_array(VT_LONG, VT_LONG)
.text:00000001000124E0: get_field_ea(VT_LONG, VT_STR2)
.text:0000000100015300: create_data(VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:0000000100010EF0: get_reg_value(VT_STR2)
.text:0000000100011070: set_reg_value(VT_WILD, VT_STR2)
.text:0000000100016510: get_wide_byte(VT_LONG)
.text:0000000100016530: get_wide_word(VT_LONG)
.text:0000000100016550: get_wide_dword(VT_LONG)
.text:0000000100017970: get_screen_ea(VT_VOID)
.text:0000000100012700: dbg_appcall(VT_LONG, VT_WILD)
.text:0000000100012790: cleanup_appcall(VT_VOID)
.text:000000010001EDC0: get_tinfo(VT_WILD)
.text:0000000100011E90: sizeof(VT_WILD)
.text:00000001000179A0: get_gotea(VT_VOID)
.text:0000000100015590: op_chr(VT_LONG, VT_LONG)
.text:00000001000155C0: op_seg(VT_LONG, VT_LONG)
.text:00000001000155F0: op_num(VT_LONG, VT_LONG)
.text:0000000100015510: op_dec(VT_LONG, VT_LONG)
.text:00000001000154E0: op_oct(VT_LONG, VT_LONG)
.text:00000001000154B0: op_bin(VT_LONG, VT_LONG)
.text:0000000100015540: op_hex(VT_LONG, VT_LONG)
.text:0000000100015750: op_man(VT_LONG, VT_LONG, VT_STR2)
.text:0000000100015670: toggle_sign(VT_LONG, VT_LONG)
.text:00000001000156A0: toggle_bnot(VT_LONG, VT_LONG)
.text:0000000100015980: op_enum(VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:00000001000158A0: op_stroff(VT_LONG, VT_LONG, VT_WILD, VT_LONG)
.text:00000001000159B0: op_stkvar(VT_LONG, VT_LONG)
.text:0000000100015810: op_offset(VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:0000000100015640: op_flt(VT_LONG, VT_LONG)
.text:0000000100015790: op_plain_offset(VT_LONG, VT_LONG, VT_LONG)
.text:00000001000153B0: create_struct(VT_LONG, VT_LONG, VT_STR2)
.text:0000000100015A10: del_items(VT_LONG, VT_LONG, VT_LONG), ndefvals = 2, defvals: VT_LONG
.text:0000000100014F40: create_strlit(VT_LONG, VT_LONG), ndefvals = 1, defvals: VT_LONG
.text:0000000100015AC0: get_extra_cmt(VT_LONG, VT_LONG)
.text:0000000100015B40: update_extra_cmt(VT_LONG, VT_LONG, VT_STR2)
.text:0000000100015B70: del_extra_cmt(VT_LONG, VT_LONG)
.text:00000001000159E0: jumpto(VT_LONG)
.text:0000000100018760: gen_file(VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:00000001000187C0: gen_flow_graph(VT_STR2, VT_STR2, VT_LONG, VT_LONG, VT_LONG)
.text:0000000100018840: gen_simple_call_chart(VT_STR2, VT_STR2, VT_LONG)
.text:00000001000164C0: get_db_byte(VT_LONG)
.text:00000001000164F0: get_dword(VT_LONG)
.text:0000000100016570: get_qword(VT_LONG)
.text:00000001000107F0: read_dbg_byte(VT_LONG)
.text:00000001000108D0: read_dbg_word(VT_LONG)
.text:00000001000109D0: read_dbg_dword(VT_LONG)
.text:0000000100010B10: read_dbg_qword(VT_LONG)
.text:0000000100010C20: read_dbg_memory(VT_LONG, VT_LONG)
.text:0000000100014FE0: dbg_can_query(VT_VOID)
.text:0000000100010D20: write_dbg_memory(VT_LONG, VT_STR2)
.text:0000000100015040: get_bytes(VT_LONG, VT_INT64, VT_LONG)
.text:00000001000114A0: patch_dbg_byte(VT_LONG, VT_LONG)
.text:00000001000161A0: patch_byte(VT_LONG, VT_LONG)
.text:00000001000161D0: patch_word(VT_LONG, VT_LONG)
.text:0000000100016200: patch_dword(VT_LONG, VT_LONG)
.text:0000000100016230: patch_qword(VT_LONG, VT_INT64)
.text:0000000100016310: set_processor_type(VT_STR2, VT_LONG)
.text:0000000100016350: get_processor_name(VT_VOID)
.text:00000001000164A0: set_target_assembler(VT_LONG)
.text:0000000100016260: batch(VT_LONG)
.text:0000000100016720: get_full_flags(VT_LONG)
.text:0000000100016750: get_flags(VT_LONG)
.text:0000000100016800: set_default_sreg_value(VT_LONG, VT_STR2, VT_LONG)
.text:0000000100016860: get_sreg(VT_LONG, VT_STR2)
.text:00000001000168C0: split_sreg_range(VT_LONG, VT_STR2, VT_LONG, VT_LONG), ndefvals = 1, defvals: VT_LONG
.text:0000000100016990: ask_str(VT_STR2, VT_LONG, VT_STR2)
.text:0000000100016A30: ask_file(VT_LONG, VT_STR2, VT_STR2)
.text:0000000100016AC0: ask_addr(VT_LONG, VT_STR2)
.text:0000000100016B20: ask_long(VT_LONG, VT_STR2)
.text:0000000100016B80: ask_seg(VT_LONG, VT_STR2)
.text:0000000100016BE0: ask_yn(VT_LONG, VT_STR2)
.text:0000000100016C20: msg(VT_STR2, VT_WILD)
.text:0000000100016C30: print(VT_WILD)
.text:0000000100016CF0: warning(VT_STR2, VT_WILD)
.text:0000000100016D30: error(VT_STR2, VT_WILD)
.text:00000001000172A0: delete_all_segments(VT_VOID)
.text:00000001000172B0: add_segm_ex(VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:00000001000173B0: del_segm(VT_LONG, VT_LONG)
.text:00000001000173E0: set_segment_bounds(VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:0000000100017460: set_segm_name(VT_LONG, VT_STR2)
.text:00000001000174B0: set_segm_class(VT_LONG, VT_STR2)
.text:0000000100017500: set_segm_addressing(VT_LONG, VT_LONG)
.text:0000000100017620: set_segm_attr(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100017540: get_segm_attr(VT_LONG, VT_LONG)
.text:0000000100017820: set_storage_type(VT_LONG, VT_LONG, VT_LONG)
.text:00000001000177A0: move_segm(VT_LONG, VT_LONG, VT_LONG)
.text:00000001000177F0: rebase_program(VT_LONG, VT_LONG)
.text:0000000100017850: _lpoke(VT_LONG, VT_LONG)
.text:0000000100017870: _poke(VT_LONG, VT_LONG)
.text:0000000100017890: _peek(VT_LONG)
.text:00000001000178A0: _call(VT_PVOID)
.text:0000000100014930: _time(VT_VOID)
.text:0000000100014950: _getenv(VT_STR2)
.text:00000001000149D0: _putenv(VT_STR2)
.text:0000000100014AD0: get_nsec_stamp(VT_VOID)
.text:0000000100013780: sprintf(VT_STR2, VT_WILD)
.text:0000000100013790: substr(VT_STR2, VT_INT64, VT_INT64)
.text:00000001000138D0: strstr(VT_STR2, VT_STR2, VT_LONG), ndefvals = 1, defvals: VT_LONG
.text:00000001000139B0: tolower(VT_STR2)
.text:0000000100013A60: toupper(VT_STR2)
.text:0000000100013990: strlen(VT_STR2)
.text:0000000100013B10: strfill(VT_LONG, VT_INT64)
.text:0000000100013BF0: trim(VT_STR2)
.text:0000000100013E90: atol(VT_STR2)
.text:0000000100017BC0: xtol(VT_STR2)
.text:0000000100017BF0: atoa(VT_LONG)
.text:0000000100013D40: ltoa(VT_LONG, VT_LONG)
.text:0000000100013E40: ord(VT_STR2)
.text:0000000100013E60: rotate_left(VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:0000000100017900: get_name_ea(VT_LONG, VT_STR2)
.text:0000000100017930: get_segm_by_sel(VT_LONG)
.text:0000000100017A10: get_curline(VT_VOID)
.text:0000000100017B20: read_selection_start(VT_VOID)
.text:0000000100017B60: read_selection_end(VT_VOID)
.text:0000000100017BA0: clear_selection(VT_VOID)
.text:0000000100017C80: get_first_seg(VT_VOID)
.text:0000000100017CB0: get_next_seg(VT_LONG)
.text:0000000100017CF0: get_segm_name(VT_LONG, VT_LONG), ndefvals = 1, defvals: VT_LONG
.text:0000000100017EE0: get_name(VT_LONG, VT_LONG), ndefvals = 1, defvals: VT_LONG
.text:0000000100017F50: get_debug_name(VT_LONG, VT_LONG)
.text:0000000100017FD0: get_debug_name_ea(VT_STR2)
.text:0000000100017D70: get_cmt(VT_LONG, VT_LONG)
.text:0000000100017DF0: get_forced_operand(VT_LONG, VT_LONG)
.text:0000000100018010: generate_disasm_line(VT_LONG, VT_LONG)
.text:0000000100018090: print_operand(VT_LONG, VT_LONG)
.text:0000000100017E20: print_insn_mnem(VT_LONG)
.text:0000000100018130: get_operand_type(VT_LONG, VT_LONG)
.text:00000001000181D0: get_operand_value(VT_LONG, VT_LONG)
.text:00000001000182A0: decode_insn(VT_LONG)
.text:0000000100018320: next_addr(VT_LONG)
.text:0000000100018340: prev_addr(VT_LONG)
.text:0000000100018360: next_head(VT_LONG, VT_LONG)
.text:0000000100018390: prev_head(VT_LONG, VT_LONG)
.text:00000001000183C0: next_not_tail(VT_LONG)
.text:00000001000183E0: prev_not_tail(VT_LONG)
.text:0000000100018400: get_item_head(VT_LONG)
.text:0000000100018460: get_item_end(VT_LONG)
.text:0000000100018480: get_item_size(VT_LONG)
.text:00000001000184D0: plan_and_wait(VT_LONG, VT_LONG, VT_LONG), ndefvals = 1, defvals: VT_LONG
.text:00000001000184B0: auto_wait(VT_VOID)
.text:0000000100013ED0: compile_idc_file(VT_STR2)
.text:0000000100013F90: compile_idc_text(VT_STR2)
.text:0000000100013CB0: exec_idc(VT_STR2)
.text:0000000100014050: eval(VT_STR2)
.text:0000000100016D60: qexit(VT_LONG)
.text:0000000100018560: set_database_flag(VT_LONG)
.text:0000000100018580: clr_database_flag(VT_LONG)
.text:0000000100018500: save_database(VT_STR2, VT_LONG)
.text:00000001000185A0: test_checkpoint(VT_LONG)
.text:00000001000185C0: get_test_id(VT_VOID)
.text:0000000100016D70: qdirname(VT_STR2)
.text:0000000100016E30: qmakefile(VT_STR2, VT_STR2)
.text:0000000100016F00: qisabspath(VT_STR2)
.text:0000000100016F40: qbasename(VT_STR2)
.text:0000000100016FB0: qmake_full_path(VT_STR2)
.text:0000000100017070: search_path(VT_STR2, VT_LONG)
.text:0000000100017140: get_file_ext(VT_STR2)
.text:00000001000171B0: sanitize_file_name(VT_STR2)
.text:0000000100014200: fopen(VT_STR2, VT_STR2)
.text:0000000100014330: fclose(VT_LONG)
.text:00000001000143D0: filelength(VT_LONG)
.text:0000000100014420: fseek(VT_LONG, VT_INT64, VT_LONG)
.text:0000000100014480: ftell(VT_LONG)
.text:0000000100018600: loadfile(VT_WILD, VT_INT64, VT_LONG, VT_LONG)
.text:0000000100018700: savefile(VT_LONG, VT_INT64, VT_LONG, VT_LONG)
.text:00000001000144D0: fgetc(VT_LONG)
.text:0000000100014540: fputc(VT_LONG, VT_LONG)
.text:0000000100014590: fprintf(VT_LONG, VT_STR2, VT_WILD)
.text:00000001000145F0: readshort(VT_LONG, VT_LONG)
.text:0000000100014650: readlong(VT_LONG, VT_LONG)
.text:00000001000146B0: writeshort(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100014720: writelong(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100014790: readstr(VT_LONG)
.text:00000001000148C0: writestr(VT_LONG, VT_STR2)
.text:0000000100014B10: unlink(VT_STR2)
.text:0000000100014B50: rename(VT_STR2, VT_STR2)
.text:0000000100014B90: mkdir(VT_STR2, VT_LONG)
.text:0000000100018890: find_suspop(VT_LONG, VT_LONG)
.text:00000001000188C0: find_code(VT_LONG, VT_LONG)
.text:00000001000188F0: find_data(VT_LONG, VT_LONG)
.text:0000000100018920: find_unknown(VT_LONG, VT_LONG)
.text:0000000100018950: find_defined(VT_LONG, VT_LONG)
.text:0000000100018980: find_imm(VT_LONG, VT_LONG, VT_LONG)
.text:00000001000189B0: find_text(VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_STR2)
.text:0000000100018A00: find_binary(VT_LONG, VT_LONG, VT_STR2)
.text:0000000100018A90: add_cref(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100018B10: del_cref(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100018B40: get_first_cref_from(VT_LONG)
.text:0000000100018B90: get_first_cref_to(VT_LONG)
.text:0000000100018B60: get_next_cref_from(VT_LONG, VT_LONG)
.text:0000000100018BB0: get_next_cref_to(VT_LONG, VT_LONG)
.text:0000000100018BE0: get_first_fcref_from(VT_LONG)
.text:0000000100018C30: get_first_fcref_to(VT_LONG)
.text:0000000100018C00: get_next_fcref_from(VT_LONG, VT_LONG)
.text:0000000100018C50: get_next_fcref_to(VT_LONG, VT_LONG)
.text:0000000100018AC0: add_dref(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100018AF0: del_dref(VT_LONG, VT_LONG)
.text:0000000100018C80: get_first_dref_from(VT_LONG)
.text:0000000100018CA0: get_next_dref_from(VT_LONG, VT_LONG)
.text:0000000100018CD0: get_first_dref_to(VT_LONG)
.text:0000000100018CF0: get_next_dref_to(VT_LONG, VT_LONG)
.text:0000000100018D20: get_xref_type(VT_VOID)
.text:0000000100018D60: auto_unmark(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100018D40: auto_mark_range(VT_LONG, VT_LONG, VT_LONG)
.text:00000001000167C0: set_selector(VT_LONG, VT_LONG)
.text:0000000100016780: sel2para(VT_LONG)
.text:00000001000167A0: find_selector(VT_LONG)
.text:00000001000167E0: del_selector(VT_LONG)
.text:0000000100019020: add_func(VT_LONG, VT_LONG), ndefvals = 1, defvals: VT_LONG
.text:00000001000190B0: del_func(VT_LONG)
.text:0000000100019110: set_func_start(VT_LONG, VT_LONG)
.text:00000001000190E0: set_func_end(VT_LONG, VT_LONG)
.text:0000000100018FE0: get_next_func(VT_LONG)
.text:0000000100018FA0: get_prev_func(VT_LONG)
.text:0000000100018D80: get_func_attr(VT_LONG, VT_LONG)
.text:0000000100018E60: set_func_attr(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100019140: get_func_name(VT_LONG)
.text:00000001000191B0: get_func_cmt(VT_LONG, VT_LONG)
.text:0000000100019240: set_func_cmt(VT_LONG, VT_STR2, VT_LONG)
.text:0000000100019290: choose_func(VT_STR2)
.text:00000001000192F0: get_func_off_str(VT_LONG)
.text:0000000100019640: define_local_var(VT_LONG, VT_LONG, VT_STR2, VT_STR2)
.text:0000000100019320: find_func_end(VT_LONG)
.text:00000001000193D0: get_frame_size(VT_LONG)
.text:0000000100019400: set_frame_size(VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:0000000100019470: get_spd(VT_LONG)
.text:00000001000194B0: get_sp_delta(VT_LONG)
.text:00000001000194F0: add_user_stkpnt(VT_LONG, VT_LONG)
.text:0000000100019580: del_stkpnt(VT_LONG, VT_LONG)
.text:0000000100019520: add_auto_stkpnt(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100019610: recalc_spd(VT_LONG)
.text:00000001000195D0: get_min_spd_ea(VT_LONG)
.text:0000000100019810: get_fchunk_attr(VT_LONG, VT_LONG)
.text:00000001000198F0: set_fchunk_attr(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100019A60: get_fchunk_referer(VT_LONG, VT_LONG)
.text:0000000100019B60: get_next_fchunk(VT_LONG)
.text:0000000100019B20: get_prev_fchunk(VT_LONG)
.text:0000000100019BA0: append_func_tail(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100019BF0: remove_fchunk(VT_LONG, VT_LONG)
.text:0000000100019C30: set_tail_owner(VT_LONG, VT_LONG)
.text:0000000100019C70: first_func_chunk(VT_LONG)
.text:0000000100019CB0: next_func_chunk(VT_LONG, VT_LONG)
.text:0000000100019D80: get_entry_qty(VT_VOID)
.text:0000000100019EA0: add_entry(VT_LONG, VT_LONG, VT_STR2, VT_LONG)
.text:0000000100019DA0: get_entry_name(VT_LONG)
.text:0000000100019E20: get_entry_ordinal(VT_LONG)
.text:0000000100019E40: get_entry(VT_LONG)
.text:0000000100019E60: rename_entry(VT_LONG, VT_STR2)
.text:0000000100019EF0: get_next_fixup_ea(VT_LONG)
.text:0000000100019F10: get_prev_fixup_ea(VT_LONG)
.text:0000000100019F30: get_fixup_target_type(VT_LONG)
.text:0000000100019FA0: get_fixup_target_flags(VT_LONG)
.text:000000010001A010: get_fixup_target_sel(VT_LONG)
.text:000000010001A070: get_fixup_target_off(VT_LONG)
.text:000000010001A0D0: get_fixup_target_dis(VT_LONG)
.text:000000010001A130: set_fixup(VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:000000010001A190: del_fixup(VT_LONG)
.text:000000010001A1B0: put_bookmark(VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_STR2)
.text:000000010001A290: get_bookmark(VT_LONG)
.text:000000010001A380: get_bookmark_desc(VT_LONG)
.text:000000010001A4B0: get_struc_id(VT_STR2)
.text:000000010001A530: get_struc_name(VT_LONG)
.text:000000010001A570: get_struc_cmt(VT_LONG, VT_LONG)
.text:000000010001A630: get_struc_size(VT_LONG)
.text:000000010001A6A0: get_member_qty(VT_LONG)
.text:000000010001A700: get_member_by_idx(VT_LONG, VT_LONG)
.text:000000010001A800: get_prev_offset(VT_LONG, VT_LONG)
.text:000000010001A830: get_next_offset(VT_LONG, VT_LONG)
.text:000000010001A860: get_first_member(VT_LONG)
.text:000000010001A960: get_last_member(VT_LONG)
.text:000000010001AA70: get_member_offset(VT_LONG, VT_STR2)
.text:000000010001AAA0: get_member_name(VT_LONG, VT_LONG)
.text:000000010001ABF0: get_member_cmt(VT_LONG, VT_LONG, VT_LONG)
.text:000000010001ACF0: get_member_size(VT_LONG, VT_LONG)
.text:000000010001ADF0: get_member_flag(VT_LONG, VT_LONG)
.text:000000010001AF10: get_member_strid(VT_LONG, VT_LONG)
.text:000000010001B010: get_member_id(VT_LONG, VT_LONG)
.text:000000010001A7B0: is_member_id(VT_LONG)
.text:000000010001B130: add_struc(VT_LONG, VT_STR2, VT_LONG)
.text:000000010001B2E0: is_union(VT_LONG)
.text:000000010001B280: del_struc(VT_LONG)
.text:000000010001B340: set_struc_name(VT_LONG, VT_STR2)
.text:000000010001B3E0: set_struc_cmt(VT_LONG, VT_STR2, VT_LONG)
.text:000000010001B7A0: set_struc_align(VT_LONG, VT_LONG)
.text:000000010001B480: add_struc_member(VT_LONG, VT_STR2, VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_WILD)
.text:000000010001B820: del_struc_member(VT_LONG, VT_LONG)
.text:000000010001B930: set_member_name(VT_LONG, VT_LONG, VT_STR2)
.text:000000010001BA60: set_member_type(VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_LONG, VT_WILD)
.text:000000010001BCB0: set_member_cmt(VT_LONG, VT_LONG, VT_STR2, VT_LONG)
.text:000000010001BDF0: expand_struc(VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:000000010001E310: set_source_linnum(VT_LONG, VT_LONG)
.text:000000010001E330: get_source_linnum(VT_LONG)
.text:000000010001E350: del_source_linnum(VT_LONG)
.text:000000010001E370: add_sourcefile(VT_LONG, VT_LONG, VT_STR2)
.text:000000010001E3E0: get_sourcefile(VT_LONG)
.text:000000010001E3B0: del_sourcefile(VT_LONG)
.text:000000010001BF10: create_array(VT_STR2)
.text:000000010001BFB0: get_array_id(VT_STR2)
.text:000000010001C040: rename_array(VT_LONG, VT_STR2)
.text:000000010001C0E0: delete_array(VT_LONG)
.text:000000010001C100: set_array_long(VT_LONG, VT_LONG, VT_LONG)
.text:000000010001C150: set_array_string(VT_LONG, VT_LONG, VT_STR2)
.text:000000010001C1A0: get_array_element(VT_LONG, VT_LONG, VT_LONG)
.text:000000010001C250: del_array_element(VT_LONG, VT_LONG, VT_LONG)
.text:000000010001C280: get_first_index(VT_LONG, VT_LONG)
.text:000000010001C2E0: get_next_index(VT_LONG, VT_LONG, VT_LONG)
.text:000000010001C2B0: get_last_index(VT_LONG, VT_LONG)
.text:000000010001C310: get_prev_index(VT_LONG, VT_LONG, VT_LONG)
.text:000000010001C340: set_hash_long(VT_LONG, VT_STR2, VT_LONG)
.text:000000010001C390: set_hash_string(VT_LONG, VT_STR2, VT_STR2)
.text:000000010001C3F0: get_hash_long(VT_LONG, VT_STR2)
.text:000000010001C430: get_hash_string(VT_LONG, VT_STR2)
.text:000000010001C4C0: del_hash_string(VT_LONG, VT_STR2)
.text:000000010001C500: get_first_hash_key(VT_LONG)
.text:000000010001C580: get_next_hash_key(VT_LONG, VT_STR2)
.text:000000010001C610: get_last_hash_key(VT_LONG)
.text:000000010001C690: get_prev_hash_key(VT_LONG, VT_STR2)
.text:000000010001C720: get_enum(VT_STR2)
.text:000000010001C820: get_enum_name(VT_LONG)
.text:000000010001C880: get_enum_cmt(VT_LONG, VT_LONG)
.text:000000010001C930: get_enum_size(VT_LONG)
.text:000000010001C980: get_enum_width(VT_LONG)
.text:000000010001C9D0: get_enum_flag(VT_LONG)
.text:000000010001CA80: get_enum_member_by_name(VT_STR2)
.text:000000010001D4D0: get_enum_member_value(VT_LONG)
.text:000000010001D580: get_enum_member_bmask(VT_LONG)
.text:000000010001CB00: get_enum_member_enum(VT_LONG)
.text:000000010001CB70: get_enum_member(VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:000000010001CC50: get_first_bmask(VT_LONG)
.text:000000010001CD00: get_last_bmask(VT_LONG)
.text:000000010001CDB0: get_next_bmask(VT_LONG, VT_LONG)
.text:000000010001CEB0: get_prev_bmask(VT_LONG, VT_LONG)
.text:000000010001CFB0: get_first_enum_member(VT_LONG, VT_LONG)
.text:000000010001D050: get_last_enum_member(VT_LONG, VT_LONG)
.text:000000010001D100: get_next_enum_member(VT_LONG, VT_LONG, VT_LONG)
.text:000000010001D230: get_prev_enum_member(VT_LONG, VT_LONG, VT_LONG)
.text:000000010001D360: get_enum_member_name(VT_LONG)
.text:000000010001D410: get_enum_member_cmt(VT_LONG, VT_LONG)
.text:000000010001D650: add_enum(VT_INT64, VT_STR2, VT_LONG)
.text:000000010001D830: del_enum(VT_LONG)
.text:000000010001B340: set_enum_name(VT_LONG, VT_STR2)
.text:000000010001D8B0: set_enum_cmt(VT_LONG, VT_STR2, VT_LONG)
.text:000000010001D950: set_enum_flag(VT_LONG, VT_LONG)
.text:000000010001DA00: set_enum_width(VT_LONG, VT_LONG)
.text:000000010001DA70: set_enum_bf(VT_LONG, VT_LONG)
.text:000000010001E1B0: add_enum_member(VT_LONG, VT_STR2, VT_LONG, VT_LONG)
.text:000000010001DAF0: del_enum_member(VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:000000010001DBB0: set_enum_member_name(VT_LONG, VT_STR2)
.text:000000010001DC40: set_enum_member_cmt(VT_LONG, VT_STR2, VT_LONG)
.text:000000010001C7C0: is_bf(VT_LONG)
.text:000000010001DD20: set_bmask_name(VT_LONG, VT_LONG, VT_STR2)
.text:000000010001DDE0: get_bmask_name(VT_LONG, VT_LONG)
.text:000000010001E0F0: set_bmask_cmt(VT_LONG, VT_LONG, VT_STR2, VT_LONG)
.text:000000010001E010: get_bmask_cmt(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100016280: get_inf_attr(VT_LONG)
.text:00000001000162A0: set_inf_attr(VT_LONG, VT_LONG)
.text:00000001000162D0: process_config_directive(VT_STR2)
.text:000000010001E440: add_idc_hotkey(VT_STR2, VT_STR2)
.text:000000010001E490: del_idc_hotkey(VT_STR2)
.text:0000000100015D20: get_root_filename(VT_VOID)
.text:0000000100015DF0: get_input_file_path(VT_VOID)
.text:0000000100015DC0: set_root_filename(VT_STR2)
.text:0000000100015EA0: retrieve_input_file_size(VT_VOID)
.text:0000000100013C50: call_system(VT_STR2)
.text:00000001000178C0: process_ui_action(VT_STR2, VT_LONG)
.text:0000000100013C90: qsleep(VT_LONG)
.text:0000000100015C60: idadir(VT_VOID)
.text:0000000100015B90: get_idb_path(VT_VOID)
.text:0000000100015F00: retrieve_input_file_md5(VT_VOID)
.text:0000000100016030: retrieve_input_file_sha256(VT_VOID)
.text:0000000100016160: del_user_info(VT_VOID)
.text:0000000100015ED0: get_imagebase(VT_VOID)
.text:0000000100015A80: op_offset_high16(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100015480: create_align(VT_LONG, VT_LONG, VT_LONG)
.text:000000010001E4D0: demangle_name(VT_STR2, VT_LONG)
.text:000000010001E560: set_manual_insn(VT_LONG, VT_STR2)
.text:000000010001E5A0: get_manual_insn(VT_LONG)
.text:00000001000156D0: set_array_params(VT_LONG, VT_LONG, VT_LONG, VT_LONG)
.text:000000010001E5D0: add_default_til(VT_STR2)
.text:000000010001E610: import_type(VT_LONG, VT_STR2)
.text:000000010001E6A0: get_ordinal_limit(VT_VOID)
.text:000000010000E520: set_local_type(VT_LONG, VT_WILD, VT_LONG)
.text:000000010001EF20: get_local_tinfo(VT_LONG, VT_WILD)
.text:000000010001E6C0: get_numbered_type_name(VT_LONG)
.text:000000010001E730: print_decls(VT_STR2, VT_LONG)
.text:0000000100017280: set_ida_state(VT_LONG)
.text:0000000100015A40: refresh_idaview_anyway(VT_VOID)
.text:0000000100015A60: refresh_choosers(VT_VOID)
.text:000000010001E930: load_and_run_plugin(VT_STR2, VT_LONG)
.text:000000010001E9A0: plan_to_apply_idasgn(VT_STR2)
.text:0000000100014F90: get_str_type(VT_LONG)
.text:00000001000151B0: get_strlit_contents(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100016590: get_original_byte(VT_LONG)
.text:00000001000165B0: get_fpnum(VT_WILD, VT_LONG)
.text:000000010001E9E0: add_hidden_range(VT_LONG, VT_LONG, VT_STR2, VT_STR2, VT_STR2, VT_LONG)
.text:000000010001EA50: update_hidden_range(VT_LONG, VT_LONG)
.text:000000010001EAA0: del_hidden_range(VT_LONG)
.text:000000010001EAD0: get_type(VT_LONG)
.text:000000010001EC10: guess_type(VT_LONG)
.text:000000010000EC40: apply_type(VT_LONG, VT_WILD, VT_LONG), ndefvals = 1, defvals: VT_LONG
.text:000000010001ED50: parse_decls(VT_STR2, VT_LONG)
.text:000000010001F140: parse_decl(VT_STR2, VT_LONG)
.text:0000000100011B10: get_color(VT_LONG, VT_LONG)
.text:0000000100011B90: set_color(VT_LONG, VT_LONG, VT_LONG)
.text:0000000100011530: get_bpt_qty(VT_VOID)
.text:0000000100011560: get_bpt_ea(VT_LONG)
.text:0000000100011660: get_bpt_attr(VT_LONG, VT_LONG)
.text:00000001000117B0: set_bpt_attr(VT_LONG, VT_LONG, VT_LONG)
.text:00000001000118E0: set_bpt_cond(VT_LONG, VT_STR2, VT_LONG), ndefvals = 1, defvals: VT_LONG
.text:0000000100011A40: add_bpt(VT_LONG, VT_LONG, VT_LONG), ndefvals = 2, defvals: VT_LONG
.text:0000000100011A70: del_bpt(VT_LONG)
.text:0000000100011AA0: enable_bpt(VT_LONG, VT_LONG)
.text:0000000100011AE0: check_bpt(VT_LONG)
.text:000000010000EDD0: load_debugger(VT_STR2, VT_LONG)
.text:000000010000EE10: start_process(VT_STR2, VT_STR2, VT_STR2)
.text:000000010000EE70: exit_process(VT_VOID)
.text:000000010000EEA0: suspend_process(VT_VOID)
.text:000000010000EED0: get_processes(VT_VOID)
.text:000000010000F130: collect_stack_trace(VT_LONG)
.text:000000010000F750: attach_process(VT_LONG, VT_LONG)
.text:000000010000F780: detach_process(VT_VOID)
.text:000000010000F7B0: get_thread_qty(VT_VOID)
.text:000000010000F7E0: getn_thread(VT_LONG)
.text:000000010000F810: get_current_thread(VT_VOID)
.text:000000010000F8D0: getn_thread_name(VT_LONG)
.text:000000010000F840: select_thread(VT_LONG)
.text:000000010000F870: suspend_thread(VT_LONG)
.text:000000010000F8A0: resume_thread(VT_LONG)
.text:000000010000F350: get_module_info(VT_LONG)
.text:000000010000F940: get_first_module(VT_VOID)
.text:000000010000F9C0: get_next_module(VT_LONG)
.text:000000010000FA40: get_module_name(VT_LONG)
.text:000000010000FB70: get_module_size(VT_LONG)
.text:000000010000FC10: step_into(VT_VOID)
.text:000000010000FC40: step_over(VT_VOID)
.text:000000010000FCA0: run_to(VT_LONG, VT_LONG, VT_LONG), ndefvals = 2, defvals: VT_LONG
.text:000000010000FC70: step_until_ret(VT_VOID)
.text:000000010000FD00: wait_for_next_event(VT_LONG, VT_LONG)
.text:000000010000FCD0: get_process_state(VT_VOID)
.text:000000010000FDC0: set_debugger_options(VT_LONG)
.text:000000010000FDF0: set_remote_debugger(VT_STR2, VT_STR2, VT_LONG)
.text:000000010000FD60: get_debugger_event_cond(VT_VOID)
.text:000000010000FD30: set_debugger_event_cond(VT_STR2)
.text:000000010000F500: get_global_var(VT_LONG, VT_STR2, VT_STR2)
.text:000000010000F590: get_local_var(VT_LONG, VT_STR2, VT_STR2)
.text:000000010000F650: get_current_source_file(VT_VOID)
.text:000000010000F620: get_current_source_line(VT_VOID)
.text:000000010000F680: add_path_mapping(VT_STR2, VT_STR2)
.text:000000010000F6C0: srcdbg_step_into(VT_VOID)
.text:000000010000F6F0: srcdbg_step_over(VT_VOID)
.text:000000010000F720: srcdbg_step_until_ret(VT_VOID)
.text:0000000100011460: get_ip_val(VT_VOID)
.text:000000010000FFB0: get_event_id(VT_VOID)
.text:000000010000FFE0: get_event_pid(VT_VOID)
.text:0000000100010010: get_event_tid(VT_VOID)
.text:0000000100010040: get_event_ea(VT_VOID)
.text:0000000100010070: is_event_handled(VT_VOID)
.text:000000010000FE30: get_event_module_name(VT_VOID)
.text:00000001000100A0: get_event_module_base(VT_VOID)
.text:00000001000100F0: get_event_module_size(VT_VOID)
.text:0000000100010140: get_event_exit_code(VT_VOID)
.text:0000000100010180: get_event_info(VT_VOID)
.text:0000000100010250: get_event_bpt_hea(VT_VOID)
.text:0000000100010290: get_event_exc_code(VT_VOID)
.text:00000001000102D0: get_event_exc_ea(VT_VOID)
.text:0000000100010310: get_event_exc_info(VT_VOID)
.text:00000001000103E0: can_exc_continue(VT_VOID)
.text:0000000100010DB0: refresh_debugger_memory(VT_VOID)
.text:0000000100010E00: take_memory_snapshot(VT_LONG)
.text:0000000100010E30: enable_tracing(VT_LONG, VT_LONG)
.text:0000000100010EA0: get_step_trace_options(VT_VOID)
.text:0000000100010ED0: set_step_trace_options(VT_LONG)
.text:0000000100010420: get_exception_qty(VT_VOID)
.text:0000000100010450: get_exception_code(VT_LONG)
.text:00000001000104A0: get_exception_name(VT_LONG)
.text:00000001000105A0: get_exception_flags(VT_LONG)
.text:0000000100010760: define_exception(VT_LONG, VT_STR2, VT_STR2, VT_LONG)
.text:0000000100010600: set_exception_flags(VT_LONG, VT_LONG)
.text:0000000100010680: forget_exception(VT_LONG)
.text:0000000100013460: value_is_string(VT_WILD)
.text:0000000100013470: value_is_long(VT_WILD)
.text:0000000100013480: value_is_float(VT_WILD)
.text:0000000100013490: value_is_object(VT_WILD)
.text:00000001000134A0: value_is_func(VT_WILD)
.text:00000001000134B0: value_is_pvoid(VT_WILD)
.text:00000001000134C0: value_is_int64(VT_WILD)
.text:0000000100013560: hasattr(VT_OBJ, VT_STR2)
.text:00000001000134D0: getattr(VT_OBJ, VT_STR2)
.text:0000000100013500: setattr(VT_OBJ, VT_STR2, VT_WILD)
.text:00000001000135A0: delattr(VT_OBJ, VT_STR2)
.text:00000001000135E0: firstattr(VT_OBJ)
.text:0000000100013640: lastattr(VT_OBJ)
.text:00000001000136A0: nextattr(VT_OBJ, VT_STR2)
.text:0000000100013710: prevattr(VT_OBJ, VT_STR2)
.text:0000000100011C20: object.retrieve(VT_OBJ, VT_WILD, VT_WILD, VT_LONG)
.text:0000000100011D20: object.store(VT_OBJ, VT_WILD, VT_WILD, VT_WILD)
.text:0000000100011F10: typeinfo.field(VT_OBJ, VT_WILD)
.text:0000000100012250: typeinfo.print(VT_OBJ, VT_WILD)
.text:0000000100012410: typeinfo.size(VT_OBJ)
.text:0000000100012470: typeinfo.__dtor__(VT_OBJ)
.text:0000000100015330: find_custom_data_type(VT_STR2)
.text:0000000100015370: find_custom_data_format(VT_STR2)
.text:0000000100014FB0: begin_type_updating(VT_LONG)
.text:0000000100014FB0: end_type_updating(VT_LONG)
.text:00000001000127C0: format_cdata(VT_WILD, VT_WILD, VT_WILD, VT_WILD, VT_REF)
.text:0000000100012DF0: validate_idb_names(VT_LONG), ndefvals = 1, defvals: VT_LONG
.text:0000000100012E20: validate_std_dirtrees(VT_VOID)
.text:0000000100017E90: func_contains(VT_LONG, VT_LONG)
.text:0000000100012DC0: is_mapped(VT_LONG)
.text:0000000100012E30: create_undo_point(VT_STR2), ndefvals = 1, defvals: VT_LONG
.text:0000000100013140: cancel_undo_point(VT_LONG)
.text:0000000100013160: perform_undo(VT_VOID)
.text:0000000100013180: perform_redo(VT_VOID)
.text:00000001000131A0: get_named_type_tid(VT_STR2)
.text:00000001000131E0: get_numbered_type_tid(VT_LONG)
.text:0000000100013250: create_enum_type(VT_STR2, VT_OBJ, VT_LONG, VT_LONG, VT_LONG, VT_WILD)
.text:000000010000E670: set_numbered_type(VT_LONG, VT_LONG, VT_STR2, VT_STR2, VT_WILD)
.text:000000010000EA70: set_named_type(VT_STR2, VT_LONG, VT_STR2, VT_WILD)
.text:000000010000EBE0: tinfo_errstr(VT_LONG)
.text:000000010000E810: load_type(VT_LONG, VT_LONG, VT_STR2, VT_STR2, VT_WILD)
